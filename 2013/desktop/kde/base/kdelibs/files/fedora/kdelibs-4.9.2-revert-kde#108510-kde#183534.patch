diff -up kdelibs-4.9.2/kinit/kinit.cpp.me kdelibs-4.9.2/kinit/kinit.cpp
--- kdelibs-4.9.2/kinit/kinit.cpp.me	2012-10-04 14:14:07.992428593 +0200
+++ kdelibs-4.9.2/kinit/kinit.cpp	2012-10-04 14:19:28.783484339 +0200
@@ -57,7 +57,6 @@
 #include <klibrary.h>
 #include <kdemacros.h>
 #include <kstandarddirs.h>
-#include <kglobalsettings.h>
 #include <kglobal.h>
 #include <kconfig.h>
 #include <kapplication.h>
@@ -538,7 +537,6 @@ static pid_t launch(int argc, const char
 #endif
   // find out these paths before forking, doing it afterwards
   // crashes on some platforms, notably OSX
-  const QByteArray docPath = QFile::encodeName(KGlobalSettings::documentPath());
 #ifdef Q_WS_MAC
   const QString bundlepath = s_instance->dirs()->findExe(QFile::decodeName(execpath));
 #endif
@@ -567,12 +565,6 @@ static pid_t launch(int argc, const char
      // we still want to execute `foo` even if the chdir() failed.
      if (cwd && *cwd) {
          (void)chdir(cwd);
-     } else {
-         // on Maemo5, documentPath() is on the SD card, setting it as working directory would block
-         // USB mass storage access
-#ifndef Q_WS_MAEMO_5
-         (void)chdir(docPath.constData());
-#endif
      }
 
      if( reset_env ) // KWRAPPER/SHELL
diff -up kdelibs-4.9.2/kio/kio/krun.cpp.me kdelibs-4.9.2/kio/kio/krun.cpp
--- kdelibs-4.9.2/kio/kio/krun.cpp.me	2012-10-04 14:24:07.520105922 +0200
+++ kdelibs-4.9.2/kio/kio/krun.cpp	2012-10-04 14:45:34.687377085 +0200
@@ -55,7 +55,6 @@
 #include <kmessageboxwrapper.h>
 #include <kurl.h>
 #include <kglobal.h>
-#include <kglobalsettings.h>
 #include <ktoolinvocation.h>
 #include <kdebug.h>
 #include <klocale.h>
@@ -1073,13 +1072,6 @@ bool KRun::runCommand(const QString& cmd
     kDebug(7010) << "runCommand " << cmd << "," << execName;
     KProcess * proc = new KProcess;
     proc->setShellCommand(cmd);
-    if (workingDirectory.isEmpty()) {
-        // see bug 108510, and we need "alt+f2 editor" (which starts a desktop file via klauncher)
-        // and "alt+f2 editor -someoption" (which calls runCommand) to be consistent.
-        proc->setWorkingDirectory(KGlobalSettings::documentPath());
-    } else {
-        proc->setWorkingDirectory(workingDirectory);
-    }
     QString bin = binaryName(execName, true);
     KService::Ptr service = KService::serviceByDesktopName(bin);
     return runCommandInternal(proc, service.data(),
